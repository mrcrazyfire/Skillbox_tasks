"""
Что входит в практическую работу
Конвертация.
Грубая математика.
Аналог Steam.
Первая цифра.
Вот это объёмы!
"""
import math

"""
Задача 1. Конвертация
При оплате покупок картой за рубежом банки делают конвертацию через промежуточную валюту.
Например, если оплачивать отечественной картой товар в евро, то сначала эта сумма конвертируется в доллары,
а потом — в рубли.

Что нужно сделать
Напишите программу, которая получает на вход стоимость покупки в евро,
а затем выводит ответ в рублях. Представим, что мы живём в альтернативной реальности,
где 1 евро = 1.25 доллара, а 1 доллар = 60.87 рубля.

Пример

Стоимость покупки в евро: 25
Стоимость в рублях: 1902.1875
"""

def conversion():
    euro = float(input("Стоимость покупки в евро: "))

    dollars = 1.25 * euro
    rubles = 60.87 * dollars

    print(f"Стоимость в рублях: {rubles}")


"""
Задача 2. Грубая математика
В одном центре математического анализа работал практикант, который писал программы для расчёта функций.
Однажды он очень устал и неправильно понял техническое задание, поэтому функции стали грубо рассчитываться.

Его программа работает следующим образом: вводится последовательность из N вещественных чисел,
при этом положительные числа округляются вверх, а отрицательные — вниз.

Что нужно сделать
Напишите программу, которая выводит натуральный логарифм от числа, если оно положительное,
и экспоненту в степени числа, если оно отрицательное.

Пример

Введите кол-во чисел: 3

Введите число: 1.3

x = 2 log(x) = 0.6931471805599453

Введите число: -2.1

x = -3 exp(x) = 0.049787068367863944

Введите число: -5.9

x = -6 exp(x) = 0.0024787521766663585
"""

def rough_math():
    numbers = int(input("Введите кол-во чисел: "))

    for _ in range(numbers):
        number = float(input("Введите число: "))
        if number > 0:
            number = math.ceil(number)
            print(f"x = {number} log(x) = {math.log(number)}")
        else:
            number = math.floor(number)
            print(f"x = {number} exp(x) = {math.exp(number)}")


"""
Задача 3. Аналог Steam
Вы пишете программу-инсталлятор для компьютерной игры. Пока инсталлятор скачивает обновление,
для пользователя необходимо отображать количество скачанных процентов, чтобы он понимал, успеет ли заварить чай,
прежде чем завершится процесс. Каждое обновление игры требует разного количества мегабайтов,
при этом у разных игроков разная скорость интернет-соединения.

Что нужно сделать
Напишите программу, принимающую на вход размер файла обновления в мегабайтах
и скорость интернет-соединения в мегабайтах в секунду.
Для каждой секунды программа должна рассчитывать и выводить на экран процент скачанного объёма до тех пор,
пока скачивание не завершится. В конце программа должна показать, сколько секунд заняло скачивание обновления.
Обеспечьте контроль ввода.

Пример

Укажите размер файла для скачивания: 123

Какова скорость вашего соединения: 27

Прошло 1 сек. Скачано 27 из 123 Мб (22%)

Прошло 2 сек. Скачано 54 из 123 Мб (44%)

Прошло 3 сек. Скачано 81 из 123 Мб (66%)

Прошло 4 сек. Скачано 108 из 123 Мб (88%)

Прошло 5 сек. Скачано 123 из 123 Мб (100%)
"""

def analogue_steam():
    file_size = int(input("Уажите размер файла для скачивания: "))
    download_speed = int(input("Какова скорость вашего соединения: "))

    total_seconds = math.ceil(file_size / download_speed)
    downloaded = 0

    for second in range(1, total_seconds + 1):
        downloaded += download_speed
        percent = math.ceil(downloaded / file_size * 100)

        if downloaded > file_size:
            downloaded = file_size
            percent = 100

        print(f"Прошло {second} сек. Скачано {downloaded} из {file_size} Мб ({percent}%)")


"""
Задача 4. Первая цифра
Что нужно сделать
Дано положительное число X, которое состоит из целой и дробной частей.
Выведите его первую цифру после десятичной точки.
При решении этой задачи нельзя пользоваться условной конструкцией, циклом или строками.


Подсказки:

Десятичная точка — это знак, который отделяет целую часть числа от его дробной части.
Например, в числе 123.456 десятичная точка отделяет 123 от 456.
Десятичную точку можно перемещать, умножая число на 10. Например: 123.456 * 10 = 1234.56.
Пример

Введите число: 123.456
Первая цифра после десятичной точки: 4
"""

def first_digit():
    number = float(input("Введите число: "))

    print(f"Первая цифра после десятичной точки: {int(number * 10) % 10}")


"""
Задача 5. Вот это объёмы!
Для курсовой работы по физике Андрею нужно сравнить объёмы двух планет:
Земли и теоретически возможной для нашей Вселенной планеты. Андрей хорошо разбирается в формулах,
но плохо считает. Объём Земли ему известен — это 1.08321 * 10 ** 12 км3.

Объём теоретически возможной планеты ему нужно посчитать. У него есть формула:

‌  
‌

‌В ней V — это объём, π — число пи, а R — радиус планеты.

Что нужно сделать

Напишите программу, которая получает на вход радиус случайной планеты и выводит на экран,
во сколько раз планета Земля меньше или больше теоретически возможной планеты по объёму.
Ответ округлите до трёх знаков после точки.

Пример 1

Введите радиус случайной планеты: 3389.5

Объём планеты Земля больше в 6.641 раз

Пример 2

Введите радиус теоретически возможной планеты: 7000

Объём планеты Земля меньше в (1/0.754) = 1.326 раз
"""

def volumes():
    radius = float(input("Введите радиус случайной планеты: "))

    earth_v = 1.08321 * 10 ** 12
    planet_v = 4 / 3 * math.pi * radius ** 3
    ratio = earth_v / planet_v

    if ratio > 1:
        print(f"Объем планеты Земля больше в {round(ratio, 3)}")
    else:
        inverse_ratio = 1 / ratio
        print(f"Объем планеты Земля меньше в (1/{round(ratio, 3)} = {round(inverse_ratio, 3)})")
